{"ast":null,"code":"var _jsxFileName = \"/Users/cristianmacovei/Desktop/Web Development/Dictionary/dictionary/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DictionaryCard from \"./DictionaryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [wordData, setWordData] = useState(null);\n  function searchKeyword(term) {\n    setSearchTerm(term);\n  }\n  useEffect(() => {\n    async function fetchData() {\n      if (searchTerm) {\n        try {\n          const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchTerm}`);\n          if (!response.ok) {\n            throw new Error(\"API data could not be fetched\");\n          }\n          const data = await response.json();\n          setWordData(data);\n        } catch (error) {\n          console.error(\"Error: \", error);\n        }\n      }\n    }\n    fetchData();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DictionaryCard, {\n      wordData: wordData,\n      searchTerm: searchTerm,\n      onSearch: searchKeyword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"mZjtF9sX0XRxGo/6aeiHoi8oLrA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DictionaryCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchTerm","setSearchTerm","wordData","setWordData","searchKeyword","term","fetchData","response","fetch","ok","Error","data","json","error","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cristianmacovei/Desktop/Web Development/Dictionary/dictionary/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DictionaryCard from \"./DictionaryCard\";\n\nexport default function App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [wordData, setWordData] = useState(null);\n\n  function searchKeyword(term) {\n    setSearchTerm(term);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (searchTerm) {\n        try {\n          const response = await fetch(\n            `https://api.dictionaryapi.dev/api/v2/entries/en/${searchTerm}`\n          );\n          if (!response.ok) {\n            throw new Error(\"API data could not be fetched\");\n          }\n          const data = await response.json();\n          setWordData(data);\n        } catch (error) {\n          console.error(\"Error: \", error);\n        }\n      }\n    }\n    fetchData();\n  }, [searchTerm]);\n\n  return (\n    <>\n      <DictionaryCard\n        wordData={wordData}\n        searchTerm={searchTerm}\n        onSearch={searchKeyword}\n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,SAASa,aAAaA,CAACC,IAAI,EAAE;IAC3BJ,aAAa,CAACI,IAAI,CAAC;EACrB;EAEAb,SAAS,CAAC,MAAM;IACd,eAAec,SAASA,CAAA,EAAG;MACzB,IAAIN,UAAU,EAAE;QACd,IAAI;UACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CACzB,mDAAkDR,UAAW,EAChE,CAAC;UACD,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;UAClD;UACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCT,WAAW,CAACQ,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QACjC;MACF;IACF;IACAP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACF,cAAc;MACbS,QAAQ,EAAEA,QAAS;MACnBF,UAAU,EAAEA,UAAW;MACvBgB,QAAQ,EAAEZ;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC,gBACF,CAAC;AAEP;AAACrB,EAAA,CArCuBD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}